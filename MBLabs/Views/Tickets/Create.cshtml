@model MBLabs.Models.Ticket

@using Microsoft.AspNetCore.Identity
@using EuVou.Areas.Identity.Data

@inject SignInManager<EuVouUser> SignInManager
@inject UserManager<EuVouUser> UserManager
@{
    var UsuarioID = @UserManager.GetUserId(User);
}
<h1>Index</h1>
@if (SignInManager.IsSignedIn(User))
{
    UsuarioID = @UserManager.GetUserId(User);

}
else
{
    <a asp-action="Register">Create New</a>
}

@{
    ViewData["Title"] = "Create";
}
value="@UsuarioID;"
<h1>Create</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id_Client" class="control-label"></label>
                <input asp-for="Id_Client" class="form-control" value="@UsuarioID"/>
                <span asp-validation-for="Id_Client" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Id_Event" class="control-label"></label>
                <input asp-for="Id_Event" class="form-control" />
                <span asp-validation-for="Id_Event" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ticket_id" class="control-label"></label>
                <input asp-for="ticket_id" class="form-control" />
                <span asp-validation-for="ticket_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
